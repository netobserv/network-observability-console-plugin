ARG BUILDSCRIPT=
ARG LDFLAGS=
FROM docker.io/library/node:18-alpine as web-builder

USER node

ARG BUILDSCRIPT
WORKDIR /opt/app-root

COPY --chown=node web/package.json web/package.json
COPY --chown=node web/package-lock.json web/package-lock.json
WORKDIR /opt/app-root/web
RUN npm ci

WORKDIR /opt/app-root
COPY --chown=node web web
COPY mocks mocks

WORKDIR /opt/app-root/web
RUN npm run format-all
RUN npm run build$BUILDSCRIPT

FROM --platform=$BUILDPLATFORM docker.io/library/golang:1.23 as go-builder

ARG LDFLAGS
WORKDIR /opt/app-root

COPY go.mod go.mod
COPY go.sum go.sum
COPY vendor/ vendor/
COPY .mk/ .mk/
COPY cmd/ cmd/
COPY pkg/ pkg/

RUN CGO_ENABLED=0 go build -ldflags "$LDFLAGS" -mod vendor -o plugin-backend cmd/plugin-backend.go

FROM registry.access.redhat.com/ubi9/ubi-minimal:9.5-1736404155

COPY --from=web-builder /opt/app-root/web/dist ./web/dist
COPY --from=go-builder /opt/app-root/plugin-backend ./

FROM cypress/included:13.6.5
RUN whoami
WORKDIR /opt/app-root
COPY --from=web-builder /opt/app-root/web/ ./web
COPY --from=go-builder /opt/app-root/plugin-backend ./

COPY mocks mocks
COPY config/sample-config.yaml ./config/config.yaml
RUN sed -i -e 's/useMocks: false/useMocks: true/g' ./config/config.yaml
COPY scripts/cypress.sh .
RUN mkdir -p /.config && chmod 775 -R /.config
ENV HOME=/home/user
RUN mkdir -p /home/user && chmod -R 775 ./cypress.sh && \
    chmod 775 plugin-backend && \
    cp -r /root/.cache /home/user/ && \
    chgrp -R 0 /opt/app-root /home/user && \
    chmod -R g+rwX /opt/app-root /root web /home/user

ENTRYPOINT ["./plugin-backend", "--loglevel", "info", "--config", "./config/config.yaml"]
